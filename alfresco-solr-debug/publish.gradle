apply plugin: 'maven-publish'
apply plugin: 'signing'


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact tasks.amp
        }
	all {
	    pom {
                url = 'https://bitbucket.com/xenit/alfresco-solr-debug'
                name = "alfresco-solr-debug"
		description = "Creates an amp + jar for having Alfresco log more information from solr"
		
                scm {
                    connection = 'scm:git:git@bitbucket.com:xenit/alfresco-solr-debug.git'
                    developerConnection = 'scm:git:git@github.com:xenit-eu/alfresco-solr-debug.git'
		    url = 'https://github.com/xenit-eu/alfresco-solr-debug.git'
		}
                developers {
                    developer {
                        id = "xenit"
                        name = "Xenit Solutions NV"
                    }
                }
		
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
            }
	}
    }
    
    repositories {
	maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
	    
            credentials {
		username = System.env.PUBLISH_USER != null ? System.env.PUBLISH_USER : ''
		password = System.env.PUBLISH_PASSWORD != null ? System.env.PUBLISH_PASSWORD : ''
            }
	}
    }
}

signing {
    //required { !(version.endsWith('SNAPSHOT')) && gradle.taskGraph.hasTask("publish") }
    required { gradle.taskGraph.hasTask("publish") }
    sign publishing.publications.mavenJava
}

gradle.taskGraph.whenReady { graph ->
    if (graph.hasTask(publish)) {
        if ((System.env.SIGN_KEY_ID == null) || (System.env.SIGN_SECRET_KEY_RINGFILE == null) || (System.env.SIGN_PASSWORD == null)) {
            //throw new GradleException('You need to provide signing params in order to sign artifacts')
        } else {
            ext."signing.keyId" = (System.env.SIGN_KEY_ID != null ? System.env.SIGN_KEY_ID : '')
            ext."signing.secretKeyRingFile" = (System.env.SIGN_SECRET_KEY_RINGFILE != null ? System.env.SIGN_SECRET_KEY_RINGFILE : '')
            ext."signing.password" = (System.env.SIGN_PASSWORD != null ? System.env.SIGN_PASSWORD : '')
        }
    }
}
